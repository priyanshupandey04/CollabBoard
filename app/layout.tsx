import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "next-themes";
import { Bounce, Flip, ToastContainer, Zoom, toast } from "react-toastify";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased `}
      >
        {/* ThemeProvider will:
            - Use localStorage.theme if it exists
            - Else default to "light"
        */}
        <ThemeProvider
          attribute="class"
          defaultTheme="light" // fallback if no theme in localStorage
          enableSystem={false} // donâ€™t override with system unless you want to
          storageKey="theme"
        >
          {children}
          {/* <Toaster /> */}
          <ToastContainer
            position="bottom-right"
            theme="dark" // 'light' | 'dark' | 'colored'
            transition={Bounce}
            progressClassName={"bg-amber-400"}
          />
        </ThemeProvider>
      </body>
    </html>
  );
}
